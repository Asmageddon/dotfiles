SHELL_CHECK="$(ps -p $$ | awk '!/PID/ {print $4}')"

if [[ ! -n $HOSTNAME ]] ; then
	HOSTNAME=$HOST
fi


###
##Track the user that originally opened the shell so we can then test if it's the same as current one
###
if [[ ! -n $ORIGINAL_USERNAME ]] ; then
	ORIGINAL_USERNAME="$USERNAME";
	export ORIGINAL_USERNAME;
fi

if [[ $ORIGINAL_USERNAME == $USERNAME ]] ; then
    ORIGINAL_USER="1";
else
	ORIGINAL_USER="";
fi


###
##Track what was the original term used so we can check for titlebar/unicode support
###
if [[ ! -n $ORIGINAL_TERM ]] ; then
	ORIGINAL_TERM="$TERM";
	export ORIGINAL_TERM;
fi


#Set variables for dynamic retrieval of user/host name and current directory(only works in prompts and in print -P)
if [[ $SHELL_CHECK == "bash" ]] ; then
    TEXT_USERNAME='\u'
    TEXT_HOSTNAME='\h'
    TEXT_WORKING_DIRECTORY='\w'
elif [[ $SHELL_CHECK == "zsh" ]] ; then
    TEXT_USERNAME='%n'
    TEXT_HOSTNAME='%M'
    TEXT_WORKING_DIRECTORY='%~'
fi


##Guess if terminal supports unicode:
if [[ -n $LC_ALL ]] ; then
    UNICODE_SUPPORT="1"
fi


###
##Test(or rather (try to)guess) if terminal supports color
###
if   [[ $TERM == *xterm* ]] ; then
    #The xterm family, most terminals fall under this category
    #xterm, xterm-256color, xterm-color, xterm-debian, color-xterm
    COLOR_SUPPORT="1"
elif [[ $TERM == rxvt* ]] ; then
    #The rxvt family
    #rxvt, rxvt-cygwin, rxvt-cygwin-native, rxvt-unicode, rxvt-256color
    COLOR_SUPPORT="1"
elif [[ $TERM == screen* ]] ; then
    #Screen(s), tmux also says he's a screen
    #screen, screen-bce, screen-w, screen.linux
    COLOR_SUPPORT="1"
elif [[ $TERM == con132* ]] ; then
    #No idea what these are, to be honest I just pulled this list from the internet
    #con132x25, con132x30, con132x43, con132x60
    COLOR_SUPPORT="1"
elif [[ $TERM == con80* ]] ; then
    #con80x25, con80x28, con80x30, con80x43, con80x50, con80x60
    COLOR_SUPPORT="1"
else
    #Everything else that supposedly supports color
    for other in ansi cons25 console cygwin dtterm Eterm gnome konsole kterm linux linux-c mach-color putty vt100; do
        if [[ $TERM == $other ]] ; then
            COLOR_SUPPORT="1";
        fi
    done
fi


###
##Try to guess if terminal has titlebar support:
###
if   [[ $TERM == screen* ]] ; then
    #Screen and derivatives all support titlebar title setting
    TITLEBAR_SUPPORT="1"
else
    #In other cases, judge by the original term
    if [[ $ORIGINAL_TERM == *xterm* ]] ; then
        TITLEBAR_SUPPORT="1"
    elif [[ $ORIGINAL_TERM == rxvt* ]] ; then
        TITLEBAR_SUPPORT="1"
    fi
fi


###
##Set up $TERMSTACK
###
##Which displays stack of shells like this:
#1 [user@hostname] using bash in xterm
#2 [user@hostname] using zsh in xterm
#3 [user@hostname] using zsh in screen
#4 [root@hostname] using zsh in screen
###

if [[ ! -n $TERMSTACKLVL ]] ; then
    export TERMSTACKLVL=0;
    export TERMSTACK="";
fi

if [[ $SHLVL > $TERMSTACKLVL ]] ; then
    export TERMSTACKLVL="$SHLVL";
    if [[ $SHLVL > 1 ]] ; then
        export TERMSTACK="$TERMSTACK\n";
    fi
    export TERMSTACK="$TERMSTACK$SHLVL [$USERNAME@$HOSTNAME] using $SHELL_CHECK in $TERM"
fi


#Colors for zsh and bash, only set if the terminal supports them
if [[ -n $COLOR_SUPPORT ]] ; then
    C_RED='\e[31m'
    C_GREEN='\e[32m'
    C_YELLOW='\e[33m'
    C_BLUE='\e[34m'
    C_PURPLE='\e[35m'
    C_CYAN='\e[36m'
    C_GRAY='\e[37m'
    C_WHITE='\e[38m'
    C_NONE='\e[0m'

    C_BG_RED='\e[41m'
    C_BG_GREEN='\e[42m'
    C_BG_YELLOW='\e[43m'
    C_BG_BLUE='\e[44m'
    C_BG_PURPLE='\e[45m'
    C_BG_CYAN='\e[46m'
    C_BG_GRAY='\e[47m'
    C_BG_WHITE='\e[48m'

    E_BOLD='\e[1m'
    E_CURSIVE='\e[3m'
    E_UNDERLINE='\e[4m'
    E_BLINK='\e[5m'
    E_INVERT='\e[7m'
fi